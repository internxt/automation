name: Release and notify
on:
  workflow_call:
    inputs:
      github_email:
        required: true
        type: string
      github_username:
        required: true
        type: string
      repository:
        required: true
        type: string
      folder:
        required: true
        type: string
      product:
        required: true
        type: string
      platform:
        required: true
        type: string
      supported_platforms:
        required: true
        type: string
      repository_name:
        required: true
        type: string
      request_body:
        required: true
        type: string
      branch:
        required: true
        type: string
    secrets:
      slack_webhook_url:
        required: true
      gh_token:
        required: true
env:
  GITHUB_EMAIL: ${{inputs.github_email}}
  GITHUB_USERNAME: ${{inputs.github_username}}
  GITHUB_TOKEN: ${{ secrets.gh_token }}
  SLACK_WEBHOOK_URL: ${{ secrets.slack_webhook_url }}
  REPOSITORY: ${{inputs.repository}}
  FOLDER: ${{inputs.folder}}
  PRODUCT: "${{inputs.product}}"
  PLATFORM: "${{inputs.platform}}"
  SUPPORTED_PLATFORMS: "${{inputs.supported_platforms}}"
  REPOSITORY_NAME: ${{inputs.repository_name}}
  REQUEST_BODY: ${{ inputs.request_body }} 
  BRANCH: ${{ inputs.branch }}
jobs:
  change-package-json-and-release:
    name: Check Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: get package version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with: 
            path: 'package.json'
            prop_path: 'version'
      - run: echo ${{steps.version.outputs.prop}} 

      - name: Increment version number
        id: increment_version
        run: |
          version="${{steps.version.outputs.prop}}"
          regex='^v([0-9]+)\.([0-9]+)\.([0-99]+)$'
          if [[ $version =~ $regex ]]; then
            major="${BASH_REMATCH[1]}"
            minor="${BASH_REMATCH[2]}"
            patch="${BASH_REMATCH[3]}"
            next_version="v${major}.${minor}.$((patch+1))"
            echo "::set-output name=next_version::$next_version"
          fi
      - name: Test
        run: |
          echo ${{ steps.increment_version.outputs.next_version }}
          
          
      - name: Commit updated package.json
        run: |
          git config --global user.email "$GITHUB_EMAIL"
          git config --global user.name "$GITHUB_USERNAME"
          jq '.version = "${{ steps.increment_version.outputs.next_version }}"' package.json > package2.json
          rm package.json
          mv package2.json package.json
          git add package.json
          git commit -m "[skip ci] Bump version ${{ steps.increment_version.outputs.next_version }}"
          git push https://${{ env.GITHUB_USERNAME }}:${{env.GITHUB_TOKEN}}@${{env.REPOSITORY}}
          
  releaseandnotify:
    name: Release
    runs-on: ubuntu-latest
    needs: change-package-json-and-release
    steps:
    
      - name: Checkout
        uses: actions/checkout@v2

      - name: get package version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with: 
            path: 'package.json'
            prop_path: 'version'
            
      - run: echo ${{steps.version.outputs.prop}} 
      
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ ENV.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.prop }}
          release_name: ${{ steps.version.outputs.prop }}
          body: ${{ env.REQUEST_BODY }}
          draft: false
          prerelease: false

      - run: |
          echo "Changes: " > new-file-feature-1.txt
          echo '${{ steps.latest_release.outputs.body }}' >>  new-file-feature-1.txt
          sed -e 's/^/"/' -e ':a;N;$!ba;s/\n/\\n/g' -e 's/"\\n/\\n"/g' -e 's/\n$//;s/\r//g' -e 's/$/"/' new-file-feature-1.txt > new-file-feature.txt
          cat new-file-feature.txt
          
      - name: Read file contents
        id: read-file-contents
        run: echo "::set-output name=file-features::$(cat new-file-feature.txt)"

      - name: Notify Release via Slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "Version": "${{steps.version.outputs.prop}}",
              "Repository": "${{ env.REPOSITORY_NAME }}",
              "Product": "${{ env.PRODUCT }}",
              "Platform": "${{ env.PLATFORM }}",
              "Support_Platforms": "${{ env.SUPPORTED_PLATFORMS }}",
              "Description": "${{ env.REQUEST_BODY }}"
            }
